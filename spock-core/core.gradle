//apply plugin: 'osgi'
apply from: script("publishMaven")

ext.displayName = "Spock Framework - Core Module"

description = '''Spock is a testing and specification framework for Java and Groovy applications.
What makes it stand out from the crowd is its beautiful and highly expressive specification language.
Thanks to its JUnit runner, Spock is compatible with most IDEs, build tools, and continuous integration servers.
Spock is inspired from JUnit, jMock, RSpec, Groovy, Scala, Vulcans, and other fascinating life forms.'''

configurations { coreConsoleRuntime }

dependencies {
  implementation libs.groovy // easiest way to add Groovy dependency to POM
  implementation libs.junit

  implementation libs.jetbrainsAnnotations, optional
  implementation libs.ant, optional
  implementation libs.asm, optional
  implementation libs.bytebuddy, optional
  implementation libs.cglib, optional
  implementation libs.objenesis, optional
//  if (variant == 2.4) {
//    compileOnly project(':internal-backport')
//  }

  coreConsoleRuntime groovyConsoleExtraDependency
}

tasks.named("jar", Jar) {
  manifest {
    attributes(
      'Build-Revision': versioning.info.commit,
      'Specification-Title': project.name,
      'Specification-Version': baseVersion,
      'Specification-Vendor': 'spockframework.org',
      'Implementation-Title': project.name,
      'Implementation-Version': variantLessVersion,
      'Implementation-Vendor': 'spockframework.org',
      'Automatic-Module-Name': 'org.spockframework.core'
    )
  }
//  bundle {
//    bnd(
//      'Export-Package': ['org.spockframework.*', 'spock.*'].join(','),
//      'Import-Package': [
//        'org.junit.platform.testkit.*;resolution:=optional',
//        'org.hamcrest.*;resolution:=optional',
//        'org.objenesis.*;resolution:=optional',
//        'net.bytebuddy.*;resolution:=optional',
//        'net.sf.cglib.*;resolution:=optional',
//        'org.objectweb.asm.*;resolution:=optional',
//        'org.mockito.*;resolution:=optional',
//        '*'
//      ].join(','),
//      '-noclassforname': 'true',
//      '-noextraheaders': 'true',
//      '-removeheaders': 'Private-Package',
//      /*
//       * Ensure the bundle can be built in a reproducible manner, This shall prevent build cache misses, when different variants are tested.
//       * https://bnd.bndtools.org/instructions/reproducible.html
//       */
//      '-reproducible': 'true',
//    )
//  }
}
//jar {
//  manifest {
////    name = 'spock-core'
//    attributes(
//      'Created-By': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})".toString(),
//      'Build-Date': buildDate,
//      'Build-Time': buildTime,
//      'Build-Revision': versioning.info.commit,
//      'Specification-Title': project.name,
//      'Specification-Version': baseVersion,
//      'Specification-Vendor': 'spockframework.org',
//      'Implementation-Title': project.name,
//      'Implementation-Version': variantLessVersion,
//      'Implementation-Vendor': 'spockframework.org',
//      'Automatic-Module-Name': 'org.spockframework.core'
//    )
//    instruction 'Export-Package', 'org.spockframework.*', 'spock.*'
//    instruction 'Embed-Dependency', 'groovy;inline=false', 'junit;inline=false'
//    instruction 'Import-Package',
//        'groovy.*;version="[2.4,4)"',
//        'org.codehaus.groovy.*;version="[2.4,4)"',
//        'org.junit.*;version="[4,6)"',
//        'org.hamcrest.*;version="[1,2)";resolution:=optional',
//        'org.objenesis.*;version="[2,3)";resolution:=optional',
//        'org.apache.tools.ant.*;version="[1.7,2)";resolution:=optional',
//        'net.bytebuddy.*;version="[1.9,2)";resolution:=optional',
//        'net.sf.cglib.*;version="[3.2,4)";resolution:=optional',
//        'org.objectweb.asm.*;version="[5.2,6)";resolution:=optional',
//        'org.w3c.dom.*'
//  }
//}

processResources {
  def tokens = [version: version.toString(), minGroovyVersion: minGroovyVersion, maxGroovyVersion: maxGroovyVersion]
  inputs.property "tokens", tokens
  filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: tokens)
}

task coreConsole(type: JavaExec,
                 description: 'Start a groovy Console with Spock Core Classpath, usefull for AST-Inspection') {
  main = "groovy.ui.Console"
  classpath = sourceSets.main.runtimeClasspath + configurations.coreConsoleRuntime
  workingDir = file('build/console')
  ignoreExitValue = true
  args file('CoreConsole.groovy').absolutePath
  doFirst {
    workingDir.mkdirs()
  }
}
